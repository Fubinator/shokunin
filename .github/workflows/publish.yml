name: ❯ Publish

on:
  push:
    branches:
      - 'feat/ssg'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - name: Checkout sources
        uses: actions/checkout@v2

      # Update the version number based on the Cargo.toml file
      - name: Update version number
        id: update-version
        run: |
          NEW_VERSION=$(grep version Cargo.toml | sed -n 2p | cut -d '"' -f 2)
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
        shell: /bin/bash -e {0}

      # Generate the changelog based on git log and template file
      - name: Generate Changelog
        run: |
          # Append version information to CHANGELOG.md
          echo "## Release v${{ env.VERSION }} - $(date +'%Y-%m-%d')" >> ${{ github.workspace }}/CHANGELOG.md
          # Copy content of template file to CHANGELOG.md
          cat TEMPLATE.md >> ${{ github.workspace }}/CHANGELOG.md
          # Append git log to CHANGELOG.md
          echo "$(git log --pretty=format:'%s' --reverse $(git describe --tags --abbrev=0)..HEAD)" >> ${{ github.workspace }}/CHANGELOG.md
          # Append empty line to CHANGELOG.md
          echo "" >> ${{ github.workspace }}/CHANGELOG.md

      # Create the release on GitHub Releases
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Shokunin (職人) Static Site Generator 🦀 v${{ env.VERSION }}
          body_path: ${{ github.workspace }}/CHANGELOG.md
          draft: true
          prerelease: false

      # Upload the artifact files to the release
      - name: Upload Artifacts
        run: |
          for filename in ssg-*-${{ env.VERSION }}.tar.gz; do
            echo "Uploading $filename"
            curl \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: $(file -b --mime-type $filename)" \
              --data-binary @"$filename" \
              "${{ steps.create-release.outputs.upload_url }}?name=$(basename $filename)"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Append the artifact links to the CHANGELOG.md
      - name: Append Artifact Links
        run: |
          echo "" >> ${{ github.workspace }}/CHANGELOG.md
          echo "## Artifacts 🎁" >> ${{ github.workspace }}/CHANGELOG.md
          for filename in $(ls ${{ github.workspace }}/ssg-*-${{ env.VERSION }}.tar.gz); do
            link="$(basename $filename)"
            echo "* [$link](${{ github.server_url }}/${{ github.repository }}/releases/download/v${{ env.VERSION }}/$link)" >> ${{ github.workspace }}/CHANGELOG.md
          done

      # Update the release description with the artifact links
      - name: Update Release Description
        run: |
          curl \
            -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"body": "'"$(cat ${{ github.workspace }}/CHANGELOG.md | sed 's/"/\\"/g')"'"}' \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create-release.outputs.id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


